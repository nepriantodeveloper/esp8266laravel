#include <ESP8266WiFi.h>
#include <WiFiClient.h>
#include <WiFiClientSecure.h>
#include <ESP8266HTTPClient.h>
#include <ArduinoJson.h>

const char* ssid = "WIFIKAMU";
const char* pass = "PWDWIFI";

int wifiStatus;
// WiFiClientSecure client; //jika https
WiFiClient client;  //jika http
HTTPClient http;


void setup() {
  Serial.begin(9600);
  delay(200);

  // Membual label status terkneksi dengan nama Wifi
  Serial.println();
  Serial.println();
  Serial.print("Terkoneksi dengan Wifi : ");
  Serial.println(ssid);

  WiFi.begin(ssid, pass);

  //ketika WiFI.status nilainya TDK sama dg WL_CONNECTED
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
}

void loop() {
  wifiStatus = WiFi.status();

  if (wifiStatus == WL_CONNECTED) {
    Serial.println("");
    Serial.println("ESP8266 sudah terkonesi dg Wifi!");
    Serial.println("IP address esp8266 : ");
    Serial.println(WiFi.localIP());
  } else {
    Serial.println("");
    Serial.println("WiFi tdk terkoneksi");
  }

  delay(1000);  // check for connection every once a second
  // getHttp();
  postHttp();
}

void getHttp() {
  http.useHTTP10(true);
  http.begin(client, "http://192.168.1.103/esp8266/public/api/produk");
  // http.begin(client, "http://arduinojson.org/example.json");
  http.GET();
  // Parse response
  DynamicJsonDocument doc(2048);
  deserializeJson(doc, http.getStream());
  // Read values
  Serial.println(doc["data"].as<String>());
  // Disconnect
  http.end();
}




void postHttp() {

  DynamicJsonDocument doc(2048);
  // doc["hello"] = "world";
  doc["valve"] = "1";
  doc["batre"] = "0.55";
  // Serialize JSON document
  String json;
  serializeJson(doc, json);
  // Send request
  http.begin(client, "http://192.168.1.103/esp8266/public/api/produk/store");
  http.addHeader("Content-Type", "application/json");
  // http.begin(client, "http://httpbin.org/post");
  http.POST(json);
  // Read response
  Serial.print(http.getString()); //tampil semua
  // DynamicJsonDocument result(2048);
  // deserializeJson(result, http.getStream());
  // // Read values
  // Serial.println(result["data"].as<String>()); //tampil hanya array data
  // Disconnect
  http.end();
}
